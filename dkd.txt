// Select UI elements or inputs
const form = $('#form');
const fname = $('#fname');
const lname = $('#lname');
const region = $('#region');
const date = $('#date');
const email = $('#email');
const password = $('#password');
const con_pw = $('#c_password');

//errors tracker
let errors = 0;
 
// show input error message
const showError = (displayPlace, message) => {
    displayPlace.html(message);
    errors += 1;
}


const checkName = (u_name) => {
    const pattern = /^[A-Za-z]+$/;
    if (u_name.val() === '') {
        showError(input.next(), `field is required`);
    }else if(!pattern.test(u_name.val())) {
        showError(u_name.next(), `Only characters allowed!`);
    }
}

const checkEmail = (input) => {
    const regex = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

    if (input.val() === '') {
        showError(input.next(), 'Email is required!');
    }
    if(!regex.test(input.val())){
        showError(input.next(), 'Email is not valid');
    }
}

const checkRegion = (region) => {
    if (region.val() === 'null') {
        showError(region.next(), 'Region is required!');
    }
}

//validate date
const checkDate = (date) => {
    const regex = /^(0[1-9]|1[012])[- /.] (0[1-9]|[12][0-9]|3[01])[- /.] (19|20)\d\d$/;
    if (date.val() === '') {
        showError(date.next(), 'Date is required!');
    }
    else if (!regex.test(date.val())) {
         showError(date.next(), 'Invalid date format!');
    }
}

// check for password constraints
const validatePassord = (password) => {
    let pattern = /^(?=.*\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,20}$/;

    if (password.val() === '') {
        showError(password.next(), 'Password is required');
    }else if (!pattern.test(password.val())) {
        showError(password.next(), 'Password must be at least 6 characters including lowercase, uppercase and special character(s)');
    }
}

//check for passwords length
// const checkPasswordMatch = (password1, password2) => {
//     if (password2.val() === '') {
//         showError(password2.next(), 'Required field!');
//     }else if(password1.val() != password2.val()){
//         showError(password2.next(), 'Your passwords do not match');
//     }
// }

const checkPasswordMatch = (password1, password2) => {
    if(password1.val() != password2.val()){
        showError(password2.next(), 'Your passwords do not match');
    }
}


const validateForm = (e) =>{
    $('small').html('');
    errors = 0;
    alert('hmmm')

    checkPasswordMatch

    // checkName(fname);
    // checkName(lname);
    // checkEmail(email);
    // checkRegion(region);
    // checkDate(date);
    // validatePassord(password);
    // checkPasswordMatch(password, con_pw);

    if(errors === 0){
        return true;
    }else{
        return false;
    }

}
